name: CI Pipeline with Semantic Versioning and Docker Image

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Checkout the code
      - name: Checkout code
        uses: actions/checkout@v2

      # Set up GitVersion using GitTools action
      - name: Set up GitVersion
        uses: GitTools/actions/gitversion-action@v0.9.10
        with:
          versionSpec: '5.x'  # Use GitVersion v5.x

      # Calculate Semantic Version using GitVersion
      - name: Calculate Semantic Version
        id: version
        run: |
          VERSION=$(gitversion /output json | jq -r .FullSemVer)
          echo "VERSION=$VERSION" >> $GITHUB_ENV  # Store VERSION as a GitHub environment variable
          echo "Version calculated: $VERSION"

      # Build the Docker image with the version
      - name: Build Docker Image
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/todo-app:${{ env.VERSION }} .

      # Log in to DockerHub using token
      - name: Log in to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}  # Use the Docker Hub token here

      # Push the Docker image to DockerHub
      - name: Push Docker Image
        run: |
          docker push ${{ secrets.DOCKER_USERNAME }}/todo-app:${{ env.VERSION }}

      # Optionally, you can add other steps here, such as testing the build or deploying
