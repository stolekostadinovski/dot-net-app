name: CI Pipeline with Semantic Versioning and Docker Image

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # Install GitVersion Tool
      - name: Install GitVersion
        uses: gittools/actions/gitversion/setup@v3.0.0
        with:
          versionSpec: '6.x'

      # Calculate Semantic Version using GitVersion
      - name: Calculate Semantic Version
        id: version
        run: |
          VERSION=$(gitversion /output json | jq -r .FullSemVer)
          echo "VERSION=$VERSION" >> $GITHUB_ENV  # Store VERSION as a GitHub environment variable
          echo "Version calculated: $VERSION"

      # Check if VERSION is empty and set a default value if necessary
      - name: Validate Version
        run: |
          if [ -z "$VERSION" ]; then
            echo "VERSION is empty, setting default version to 'latest'"
            VERSION="latest"
          fi
          echo "Final VERSION: $VERSION"
          echo "VERSION=$VERSION" >> $GITHUB_ENV  # Make sure VERSION is available in the next steps

      # Log in to DockerHub using token (before the build)
      - name: Log in to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}  # Use the Docker Hub token here

      # Build the Docker image with the version
      - name: Build Docker Image
        run: |
          echo "Building Docker image with version: $VERSION"
          docker build -t ${{ secrets.DOCKER_USERNAME }}/todo-app:$VERSION .

      # Push the Docker image to DockerHub
      - name: Push Docker Image
        run: |
          docker push ${{ secrets.DOCKER_USERNAME }}/todo-app:$VERSION
